[{"C:\\Users\\onurr\\Desktop\\onur_akin\\src\\reportWebVitals.js":"1","C:\\Users\\onurr\\Desktop\\onur_akin\\src\\App.js":"2","C:\\Users\\onurr\\Desktop\\onur_akin\\src\\index.js":"3","C:\\Users\\onurr\\Desktop\\onur_akin\\src\\Page\\ShoppingInformation.js":"4","C:\\Users\\onurr\\Desktop\\onur_akin\\src\\Settings\\languageSelect.js":"5","C:\\Users\\onurr\\Desktop\\onur_akin\\src\\Settings\\i18nextInit.js":"6","C:\\Users\\onurr\\Desktop\\onur_akin\\src\\Page\\Malls.js":"7"},{"size":362,"mtime":1610027857866,"results":"8","hashOfConfig":"9"},{"size":812,"mtime":1610230556402,"results":"10","hashOfConfig":"9"},{"size":617,"mtime":1610222008718,"results":"11","hashOfConfig":"9"},{"size":7258,"mtime":1610276086653,"results":"12","hashOfConfig":"9"},{"size":2160,"mtime":1610231312442,"results":"13","hashOfConfig":"9"},{"size":844,"mtime":1610223469109,"results":"14","hashOfConfig":"9"},{"size":188,"mtime":1610274745886,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1pqsco3",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\onurr\\Desktop\\onur_akin\\src\\reportWebVitals.js",[],["34","35"],"C:\\Users\\onurr\\Desktop\\onur_akin\\src\\App.js",["36","37"],"import React, {Component} from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport ShoppingMall from \"./Page/ShoppingInformation\"\nimport './App.css';\n\nimport img1 from \"./Images/img_floor1_en.png\";\nimport img2 from \"./Images/img_floor2_en.png\";\nimport img3 from \"./Images/img_floor3_en.png\";\nimport img4 from \"./Images/img_floor4_en.png\";\n\nconst data = [\n  { src: img1, caption: \"Floor One\" },\n  { src: img2, caption: \"Floor Two\" },\n  { src: img3, caption: \"Floor Three\" },\n  { src: img4, caption: \"Floor Four\" },\n];\n\nclass App extends Component {\n  render() {\n    const { t, i18n } = this.props\n    return (\n      <div className=\"App\">\n        <ShoppingMall t={t} input={data} ratio={`3:2`} mode={`manual`} />\n\n\n\n    \n      </div>\n    );\n  }\n}\nexport default withTranslation()(App);","C:\\Users\\onurr\\Desktop\\onur_akin\\src\\index.js",[],"C:\\Users\\onurr\\Desktop\\onur_akin\\src\\Page\\ShoppingInformation.js",["38","39","40"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport LanguageSelect from \"../Settings/languageSelect\";\r\nimport img1 from \"../Images/madame_coco.jpg\";\r\nimport img2 from \"../Images/adidas.jpg\";\r\n\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport \"./slideshow.css\";\r\n\r\nclass ShoppingInformation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      slideIndex: 0,\r\n      dropDownOpen: \"\",\r\n      filter: \"\",\r\n      modal: false,\r\n      fade: false,\r\n      data: [\r\n        {\r\n          id:\"1\",\r\n          fname: \"Adidas\",\r\n     \r\n        },\r\n        {\r\n          id:\"2\",\r\n          fname: \"Nike\",\r\n      \r\n        },\r\n        {\r\n          id:\"3\",\r\n          fname: \"Decathlon\",\r\n        \r\n        },\r\n        {\r\n          id:\"4\",\r\n          fname: \"Puma\",\r\n \r\n        },\r\n      ],\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    const ratioWHArray = this.props.ratio.split(\":\");\r\n    this.ratioWH = ratioWHArray[0] / ratioWHArray[1];\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n    console.log(\"after setState: \", this.state);\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({ filter: event.target.value });\r\n  };\r\n\r\n  getNewSlideIndex = (step) => {\r\n    const slideIndex = this.state.slideIndex;\r\n    const numberSlide = this.props.input.length;\r\n\r\n    let newSlideIndex = slideIndex + step;\r\n\r\n    if (newSlideIndex >= numberSlide) newSlideIndex = 0;\r\n    else if (newSlideIndex < 0) newSlideIndex = numberSlide - 1;\r\n\r\n    return newSlideIndex;\r\n  };\r\n\r\n  backward = () => {\r\n    this.setState({\r\n      slideIndex: this.getNewSlideIndex(-1),\r\n    });\r\n  };\r\n\r\n  forward = () => {\r\n    this.setState({\r\n      slideIndex: this.getNewSlideIndex(1),\r\n    });\r\n  };\r\n\r\n  setSlideIndex = (index) => {\r\n    this.setState({\r\n      slideIndex: index,\r\n    });\r\n  };\r\n\r\n  updateDimensions = () => {\r\n    this.containerElm.style.height = `${\r\n      this.containerElm.offsetWidth / this.ratioWH\r\n    }px`;\r\n  };\r\n\r\n  runAutomatic = () => {\r\n    this.setState({\r\n      slideIndex: this.getNewSlideIndex(1),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.rootElm = ReactDOM.findDOMNode(this);\r\n    this.containerElm = this.rootElm.querySelector(\".container\");\r\n\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n\r\n    if (this.props.mode === \"automatic\") {\r\n      const timeout = this.props.timeout || 5000;\r\n\r\n      this.automaticInterval = setInterval(\r\n        () => this.runAutomatic(),\r\n        Number.parseInt(timeout)\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n    if (this.automaticInterval) clearInterval(this.automaticInterval);\r\n  }\r\n\r\n  render() {\r\n    const { filter, data } = this.state;\r\n    const lowercasedFilter = filter.toLowerCase();\r\n    const filteredData = data.filter((item) => {\r\n      return Object.keys(item).some((key) =>\r\n        item[key].toLowerCase().includes(lowercasedFilter)\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col xs=\"12\">\r\n            <Row>\r\n              <Col xs=\"11\">\r\n                <FormGroup>\r\n                  <Input\r\n                    className=\"mt-5\"\r\n                    type=\"select\"\r\n                    value={filter}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {data.map((item) => (\r\n                      <option key={item.email}>{item.fname}</option>\r\n                    ))}\r\n                  </Input>\r\n\r\n                  {filter == \"\"\r\n                    ? \"\"\r\n                    : filteredData.map((item) => (\r\n                        <div key={item.email}>\r\n                          <div>\r\n                            {item.fname} \r\n                        \r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"1\">\r\n                <LanguageSelect />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs=\"6\">\r\n            <div>\r\n              <Button color=\"danger\" onClick={this.toggle}>\r\n                {this.props.t(\"campaigns_and_announcements\")}\r\n              </Button>\r\n              <Modal\r\n                isOpen={this.state.modal}\r\n                fade={this.state.fade}\r\n                toggle={this.toggle}\r\n              >\r\n                <ModalHeader cssModule={{'modal-title': 'w-100 text-center'}} toggle={this.toggle}>{this.props.t(\"campaigns_and_announcements\")}</ModalHeader>\r\n                <ModalBody>\r\n                  <Row>\r\n                    <Col xs=\"5\">Madame Coco Yeni Yıl Fırsatı %50 Kampanya</Col>\r\n                    <Col xs=\"7\"> <img\r\n                        className=\"image\"\r\n                        width=\"100%\"\r\n                        src={img1}\r\n                      \r\n                      /></Col>\r\n                  </Row>\r\n                  <hr/>\r\n                  <Row>\r\n                    <Col xs=\"5\">Adidas'tan Öğretmenler gününe özel Fırsatlar</Col>\r\n                    <Col xs=\"7\"> <img\r\n                        className=\"image\"\r\n                        width=\"100%\"\r\n                        src={img2}\r\n                      \r\n                      /></Col>\r\n                  </Row>\r\n                </ModalBody>\r\n               \r\n              </Modal>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"6\">\r\n            <div className=\"lp-slideshow\">\r\n              <div className=\"container\">\r\n                {this.props.input.map((image, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index}\r\n                      className={`slide ${\r\n                        this.state.slideIndex === index ? \"active\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <div className=\"number-text\">\r\n                        {`${index + 1} / ${this.props.input.length}`}\r\n                      </div>\r\n                      <img\r\n                        className=\"image\"\r\n                        width=\"200px\"\r\n                        src={image.src}\r\n                        alt={image.caption}\r\n                      />\r\n                      <div className=\"caption-text\">{this.props.t(image.caption)}</div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n\r\n              <div className=\"dot-container\">\r\n                {this.props.input.map((_, index) => {\r\n                  return (\r\n                    <span\r\n                      key={index}\r\n                      className={`dot ${\r\n                        this.state.slideIndex === index ? \"active\" : \"\"\r\n                      }`}\r\n                      onClick={() => this.setSlideIndex(index)}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default ShoppingInformation;\r\n","C:\\Users\\onurr\\Desktop\\onur_akin\\src\\Settings\\languageSelect.js",[],["41","42"],"C:\\Users\\onurr\\Desktop\\onur_akin\\src\\Settings\\i18nextInit.js",[],"C:\\Users\\onurr\\Desktop\\onur_akin\\src\\Page\\Malls.js",["43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":24},{"ruleId":"48","severity":1,"message":"52","line":20,"column":16,"nodeType":"50","messageId":"51","endLine":20,"endColumn":20},{"ruleId":"53","severity":1,"message":"54","line":159,"column":27,"nodeType":"55","messageId":"56","endLine":159,"endColumn":29},{"ruleId":"57","severity":1,"message":"58","line":192,"column":34,"nodeType":"59","endLine":197,"endColumn":25},{"ruleId":"57","severity":1,"message":"58","line":202,"column":34,"nodeType":"59","endLine":207,"endColumn":25},{"ruleId":"44","replacedBy":"60"},{"ruleId":"46","replacedBy":"61"},{"ruleId":"48","severity":1,"message":"62","line":1,"column":10,"nodeType":"50","messageId":"51","endLine":1,"endColumn":24},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'useTranslation' is defined but never used.","Identifier","unusedVar","'i18n' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["63"],["64"],"'LocalMallSharp' is defined but never used.","no-global-assign","no-unsafe-negation"]